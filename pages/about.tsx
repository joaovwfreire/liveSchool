import type { NextPage } from 'next';
import Head from 'next/head';
import Link from 'next/link';
import styles from '../styles/Home.module.css';




const Home: NextPage = () => {
  

  return (
    <div className='bg-slate-100'>
    <div className={styles.container}>
      <Head>
        <title>live School</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
      <div className='box'>
          <div></div>
          <div></div>
          <div></div>
          <div></div>
          <div></div>
          <div></div>
        </div>
        <div className='box2'>
          <div></div>
          <div></div>
          <div></div>
          <div></div>
        </div>
<div className="card flex-shrink-0 w-full max-w-3xl shadow-2xl bg-base-100 mt-5">
      <div className="card-body">
        <div className='card-title'>About</div>
        <p>liveSchool is a dApp built for Encode Next Video Build hackathon.</p>
        <p>It enables content creators to easily set up gated-access to their live streams and uploaded videos. </p>
        <h3 className='font-bold'>Lit Access Control</h3>
        <p>By using Lit Access control, relevant data  access is restricted. Only users that own an nft minted by
          the content creator can view livestreams links and uploaded videos. At the control panel, in order to upload new videos, start 
          live streams and tranfer access passes to the user, one must own one asset AND be the original teacher of the course.
        </p>
        <h3 className='font-bold'>LivePeer</h3>
        <p>LivePeer is the bread and butter of this application, as it provides components for automatic video playback for previews at 
           the video upload component and at the uploaded videos session for access pass owners. LivePeer also handles the livestreams logic:
           from generating the stream keys to providing links for the authenticated users to watch content.

           </p>
        <h3 className='font-bold'>NFT Port</h3>
        <p>
          NFT Port apis were used to mint Digital Assets to a course creator wallet address.
          Upon a createCourse api call, the api calls NFT Ports batch minting endpoint in order to mint X amount of digital Assets 
          to the designated course teacher.

        </p>
        <h3 className='font-bold'>W3 Storage</h3>
        <p>W3 storage was used to store Access Passes images and IPFS metadata alongisde video files. W3ui components handle all the file upload logic at this dApp. </p>
        <h3 className='font-bold'>XMTP</h3>
        <p>
          XMTP is used to notify access pass holders of any relevant event at the courses being taken. The events notified at LiveSchool are:
          New livestreams and new video uploads.
          One interesting view to have of XMTPs usage at this dApp is to portray it like a Web3 Twillio. Its apis are used for notification sending
          to specific addresses.
          At the notification page, a user can check its own messages plus the latest news on the courses enrolled.
        </p>
        <h3 className='font-bold'>Why Polygon?</h3>
        <p>
          The purpose of liveSchool is to help teachers reach out to people wanting to learn
          at a much broader scale. 
          Low gas fees do mean theres a very small entry barrier.
          On top of that, many ground-breaking blockchain innovations are happening in Polygon, such as the Web3 Debt Card.
          One of the top2 biggest Solana Game-Fi projects is coming to the chain as well.
          Combine those elements with Polygon scaling solutions and the reason for picking it as LiveSchools primary chain is clear:
          it is very likely that Polygon will be the chain of choice for most new users.
        </p>
        <h3 className='font-bold'>Want to know more about this project?</h3>
        <p>
          Email me at jvwfreire@gmail.com
        </p>
        <Link href='https://www.linkedin.com/in/joaovwfreire/' passHref><a target="_blank">Send me a connection request at LinkedIn</a></Link>
    </div>
    </div>
    </main>
    </div>
    </div>
  )
};

export default Home;
